generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  recruiter
  admin
}

enum status {
  pending
  accepted
  rejected
}

enum workType {
  fullTime
  partTime
  hybrid
}

model user {
  id                  String        @id @default(uuid())
  fullName            String
  email               String        @unique
  password            String
  role                Role          @default(user)
  resetPasswordToken  String?
  resetPasswordExpire DateTime?
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  profile             profile?
  jobPosts            job[]
  applications        application[]
  company             company[]
  bio                 String?
  skills              String?
  phone               String?
  resumeUrl           String?
  resumeId            String?
}

model profile {
  profileUrl String
  profileId  String
  user       user   @relation(fields: [userId], references: [id])
  userId     String @unique
}

model company {
  id       String @id @default(uuid())
  title    String
  location String
  logoUrl  String
  logoId   String
  jobs     job[]
  user     user   @relation(fields: [userId], references: [id])
  userId   String
}

model job {
  id            String        @id @default(uuid())
  createdAt     DateTime      @default(now())
  title         String
  description   String
  salary        String
  numberOfHires Int
  workType      workType      @default(fullTime)
  createdBy     user          @relation(fields: [createdId], references: [id], onDelete: Cascade)
  createdId     String
  jobCategory   jobCategory?  @relation(fields: [jobCategoryId], references: [id], onDelete: SetNull)
  jobCategoryId String?
  application   application[]
  company       company       @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId     String
}

model jobCategory {
  id    String @id @default(uuid())
  title String
  jobs  job[]
}

model application {
  id           String   @id @default(uuid())
  appliedAt    DateTime @default(now())
  status       status   @default(pending)
  job          job      @relation(fields: [jobId], references: [id])
  jobId        String
  user         user     @relation(fields: [userId], references: [id])
  userId       String
  jobTitle     String
  companyTitle String
  resumeUrl    String
}
